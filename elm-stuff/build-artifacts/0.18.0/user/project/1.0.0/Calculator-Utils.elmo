var _user$project$Calculator_Utils$operationToString = function (operation) {
	var _p0 = operation;
	switch (_p0.ctor) {
		case 'Add':
			return '+';
		case 'Substract':
			return '-';
		case 'Multiply':
			return 'x';
		case 'Divide':
			return '/';
		default:
			return '';
	}
};
var _user$project$Calculator_Utils$calculateOperation = F3(
	function (x, y, operation) {
		var _p1 = operation;
		switch (_p1.ctor) {
			case 'NoOperation':
				return x;
			case 'Add':
				return x + y;
			case 'Substract':
				return x - y;
			case 'Multiply':
				return x * y;
			default:
				return x / y;
		}
	});
var _user$project$Calculator_Utils$enter = function (model) {
	var _p2 = _elm_lang$core$String$toFloat(model.display);
	if (_p2.ctor === 'Err') {
		return _elm_lang$core$Native_Utils.update(
			model,
			{display: 'Err', firstTerm: 0, operation: _user$project$Calculator_Types$NoOperation, appendNumber: false});
	} else {
		var _p3 = _p2._0;
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				display: _elm_lang$core$Basics$toString(
					A3(_user$project$Calculator_Utils$calculateOperation, model.firstTerm, _p3, model.operation)),
				firstTerm: A3(_user$project$Calculator_Utils$calculateOperation, model.firstTerm, _p3, model.operation),
				operation: _user$project$Calculator_Types$NoOperation,
				appendNumber: false
			});
	}
};
var _user$project$Calculator_Utils$onOperatorSelected = F2(
	function (model, operation) {
		var _p4 = _elm_lang$core$String$toFloat(model.display);
		if (_p4.ctor === 'Err') {
			return _elm_lang$core$Native_Utils.update(
				model,
				{display: 'Err', firstTerm: 0, operation: _user$project$Calculator_Types$NoOperation, appendNumber: false});
		} else {
			return _elm_lang$core$Native_Utils.update(
				model,
				{
					display: _user$project$Calculator_Utils$operationToString(operation),
					firstTerm: _p4._0,
					operation: operation,
					appendNumber: false
				});
		}
	});
var _user$project$Calculator_Utils$onDotSelected = function (model) {
	var _p5 = _elm_lang$core$String$toFloat(model.display);
	if (_p5.ctor === 'Err') {
		return _elm_lang$core$Native_Utils.update(
			model,
			{display: '0.', appendNumber: true});
	} else {
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				display: A2(_elm_lang$core$Basics_ops['++'], model.display, '.'),
				appendNumber: true
			});
	}
};
var _user$project$Calculator_Utils$onNumberSelected = F2(
	function (model, num) {
		return model.appendNumber ? _elm_lang$core$Native_Utils.update(
			model,
			{
				display: A2(
					_elm_lang$core$Basics_ops['++'],
					model.display,
					_elm_lang$core$Basics$toString(num))
			}) : _elm_lang$core$Native_Utils.update(
			model,
			{
				display: _elm_lang$core$Basics$toString(num),
				appendNumber: true
			});
	});
